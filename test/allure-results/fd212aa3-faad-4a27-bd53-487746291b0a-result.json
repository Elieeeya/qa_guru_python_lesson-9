{"name": "test_student_registration_form", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '#state')).click\n\nReason: ElementClickInterceptedException: Message: element click intercepted: Element <div class=\" css-2b097c-container\" id=\"state\">...</div> is not clickable at point (423, 817). Other element would receive the click: <div>...</div>\n  (Session info: chrome=100.0.4896.60)\nStacktrace:\n#0 0x561df7c93013 <unknown>\n#1 0x561df79f5a08 <unknown>\n#2 0x561df7a335a1 <unknown>\n#3 0x561df7a31188 <unknown>\n#4 0x561df7a2e824 <unknown>\n#5 0x561df7a2d5c2 <unknown>\n#6 0x561df7a20e19 <unknown>\n#7 0x561df7a49932 <unknown>\n#8 0x561df7a206d3 <unknown>\n#9 0x561df7a49a3e <unknown>\n#10 0x561df7a5cb94 <unknown>\n#11 0x561df7a49823 <unknown>\n#12 0x561df7a1f08a <unknown>\n#13 0x561df7a201e5 <unknown>\n#14 0x561df7cc0e5d <unknown>\n#15 0x561df7cda061 <unknown>\n#16 0x561df7cc2bb5 <unknown>\n#17 0x561df7cdae08 <unknown>\n#18 0x561df7cb62f0 <unknown>\n#19 0x561df7cf6988 <unknown>\n#20 0x561df7cf6b08 <unknown>\n#21 0x561df7d105dd <unknown>\n#22 0x7f3b6ca36609 <unknown>\n\nScreenshot: file://C:\\Users\\#nogamenolife-PC\\.selene\\screenshots\\1658844119312\\1658844119313.png\nPageSource: file://C:\\Users\\#nogamenolife-PC\\.selene\\screenshots\\1658844119312\\1658844119313.html", "trace": "self = <selene.core.wait.Wait object at 0x000002921A9ACFD0>\nfn = <selene.core.wait.Command object at 0x000002921A9AF910>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Command object at 0x000002921A9AF910>\nentity = <selene.core.entity.Element object at 0x000002921A9AD7E0>\n\n    def __call__(self, entity: T) -> R:\n>       return self._fn(entity)\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\wait.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nelement = <selene.core.entity.Element object at 0x000002921A9AD7E0>\n\n>   self.wait.command('click', lambda element: element().click())\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\entity.py:464: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"b99fe4b3ce079e38c35580f0479c7099\", element=\"1745962c-5284-4cc5-a74d-fd366120e337\")>\n\n    def click(self) -> None:\n        \"\"\"Clicks the element.\"\"\"\n>       self._execute(Command.CLICK_ELEMENT)\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.webelement.WebElement (session=\"b99fe4b3ce079e38c35580f0479c7099\", element=\"1745962c-5284-4cc5-a74d-fd366120e337\")>\ncommand = 'clickElement'\nparams = {'id': '1745962c-5284-4cc5-a74d-fd366120e337', 'sessionId': 'b99fe4b3ce079e38c35580f0479c7099'}\n\n    def _execute(self, command, params=None):\n        \"\"\"Executes a command against the underlying HTML element.\n    \n        Args:\n          command: The name of the command to _execute as a string.\n          params: A dictionary of named parameters to send with the command.\n    \n        Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if not params:\n            params = {}\n        params['id'] = self._id\n>       return self._parent.execute(command, params)\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:773: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.webdriver.WebDriver (session=\"b99fe4b3ce079e38c35580f0479c7099\")>\ndriver_command = 'clickElement'\nparams = {'id': '1745962c-5284-4cc5-a74d-fd366120e337'}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002921AA15B70>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x561df7cf6b08 \\\\u003Cunknown>\\\\n#21 0x561df7d105dd \\\\u003Cunknown>\\\\n#22 0x7f3b6ca36609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\" css-2b097c-container\" id=\"state\">...</div> is not clickable at point (423, 817). Other element would receive the click: <div>...</div>\nE         (Session info: chrome=100.0.4896.60)\nE       Stacktrace:\nE       #0 0x561df7c93013 <unknown>\nE       #1 0x561df79f5a08 <unknown>\nE       #2 0x561df7a335a1 <unknown>\nE       #3 0x561df7a31188 <unknown>\nE       #4 0x561df7a2e824 <unknown>\nE       #5 0x561df7a2d5c2 <unknown>\nE       #6 0x561df7a20e19 <unknown>\nE       #7 0x561df7a49932 <unknown>\nE       #8 0x561df7a206d3 <unknown>\nE       #9 0x561df7a49a3e <unknown>\nE       #10 0x561df7a5cb94 <unknown>\nE       #11 0x561df7a49823 <unknown>\nE       #12 0x561df7a1f08a <unknown>\nE       #13 0x561df7a201e5 <unknown>\nE       #14 0x561df7cc0e5d <unknown>\nE       #15 0x561df7cda061 <unknown>\nE       #16 0x561df7cc2bb5 <unknown>\nE       #17 0x561df7cdae08 <unknown>\nE       #18 0x561df7cb62f0 <unknown>\nE       #19 0x561df7cf6988 <unknown>\nE       #20 0x561df7cf6b08 <unknown>\nE       #21 0x561df7d105dd <unknown>\nE       #22 0x7f3b6ca36609 <unknown>\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_browser = None\n\n    def test_student_registration_form(setup_browser):\n        with allure.step('test_open_student_registration_form'):\n            browser.open('https://demoqa.com/automation-practice-form')\n    \n        with allure.step('test_fill_student_form'):\n            # First name, last name, mail\n            browser.element('#firstName').type('TestName')\n            browser.element('#lastName').type('TestSurname')\n            browser.element('#userEmail').type('test_email@ya.ru')\n    \n            # Gender\n            browser.element('[for=\"gender-radio-1\"]').click()\n            # Phone number\n            browser.element('#userNumber').type('9208887755')\n    \n            # Form with date\n            date_of_birth = DatePicker(browser.element('#dateOfBirthInput'))\n            date_of_birth.select_year(1993)\n            date_of_birth.select_month('September')\n            date_of_birth.select_day(18)\n    \n            # Subjects\n            subjects = EnteringTags(browser.element('#subjectsInput'))\n    \n            subjects.add('Economics')\n            subjects.add('English')\n            subjects.add('Arts')\n    \n            # Hobbies\n            browser.element('[for=\"hobbies-checkbox-1\"]').click()\n            browser.element('[for=\"hobbies-checkbox-3\"]').click()\n    \n            # Loading a picture\n            browser.element('#uploadPicture').send_keys(get_abspath('l8xMcQXMrRqEv1GdFVdPCD6a9zP.jpg'))\n    \n            # Address\n            browser.element('#currentAddress').type('Bolshaya Nikitskaya st., 22k2, Moscow, 121099')\n    \n            # State selection\n            state = Dropdown(browser.element('#state'))\n>           state.select(option='Haryana')\n\ntest_box.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\demoqa_tests\\controls\\dropdown.py:11: in select\n    self.element.perform(command.js.scroll_into_view).click()\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\entity.py:464: in click\n    self.wait.command('click', lambda element: element().click())\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\wait.py:136: in command\n    self.for_(Command(description, fn))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.wait.Wait object at 0x000002921A9ACFD0>\nfn = <selene.core.wait.Command object at 0x000002921A9AF910>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('css selector', '#state')).click\nE                       \nE                       Reason: ElementClickInterceptedException: Message: element click intercepted: Element <div class=\" css-2b097c-container\" id=\"state\">...</div> is not clickable at point (423, 817). Other element would receive the click: <div>...</div>\nE                         (Session info: chrome=100.0.4896.60)\nE                       Stacktrace:\nE                       #0 0x561df7c93013 <unknown>\nE                       #1 0x561df79f5a08 <unknown>\nE                       #2 0x561df7a335a1 <unknown>\nE                       #3 0x561df7a31188 <unknown>\nE                       #4 0x561df7a2e824 <unknown>\nE                       #5 0x561df7a2d5c2 <unknown>\nE                       #6 0x561df7a20e19 <unknown>\nE                       #7 0x561df7a49932 <unknown>\nE                       #8 0x561df7a206d3 <unknown>\nE                       #9 0x561df7a49a3e <unknown>\nE                       #10 0x561df7a5cb94 <unknown>\nE                       #11 0x561df7a49823 <unknown>\nE                       #12 0x561df7a1f08a <unknown>\nE                       #13 0x561df7a201e5 <unknown>\nE                       #14 0x561df7cc0e5d <unknown>\nE                       #15 0x561df7cda061 <unknown>\nE                       #16 0x561df7cc2bb5 <unknown>\nE                       #17 0x561df7cdae08 <unknown>\nE                       #18 0x561df7cb62f0 <unknown>\nE                       #19 0x561df7cf6988 <unknown>\nE                       #20 0x561df7cf6b08 <unknown>\nE                       #21 0x561df7d105dd <unknown>\nE                       #22 0x7f3b6ca36609 <unknown>\nE                       \nE                       Screenshot: file://C:\\Users\\#nogamenolife-PC\\.selene\\screenshots\\1658844119312\\1658844119313.png\nE                       PageSource: file://C:\\Users\\#nogamenolife-PC\\.selene\\screenshots\\1658844119312\\1658844119313.html\n\nC:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\wait.py:125: TimeoutException"}, "steps": [{"name": "test_open_student_registration_form", "status": "passed", "start": 1658844127384, "stop": 1658844129463}, {"name": "test_fill_student_form", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '#state')).click\n\nReason: ElementClickInterceptedException: Message: element click intercepted: Element <div class=\" css-2b097c-container\" id=\"state\">...</div> is not clickable at point (423, 817). Other element would receive the click: <div>...</div>\n  (Session info: chrome=100.0.4896.60)\nStacktrace:\n#0 0x561df7c93013 <unknown>\n#1 0x561df79f5a08 <unknown>\n#2 0x561df7a335a1 <unknown>\n#3 0x561df7a31188 <unknown>\n#4 0x561df7a2e824 <unknown>\n#5 0x561df7a2d5c2 <unknown>\n#6 0x561df7a20e19 <unknown>\n#7 0x561df7a49932 <unknown>\n#8 0x561df7a206d3 <unknown>\n#9 0x561df7a49a3e <unknown>\n#10 0x561df7a5cb94 <unknown>\n#11 0x561df7a49823 <unknown>\n#12 0x561df7a1f08a <unknown>\n#13 0x561df7a201e5 <unknown>\n#14 0x561df7cc0e5d <unknown>\n#15 0x561df7cda061 <unknown>\n#16 0x561df7cc2bb5 <unknown>\n#17 0x561df7cdae08 <unknown>\n#18 0x561df7cb62f0 <unknown>\n#19 0x561df7cf6988 <unknown>\n#20 0x561df7cf6b08 <unknown>\n#21 0x561df7d105dd <unknown>\n#22 0x7f3b6ca36609 <unknown>\n\nScreenshot: file://C:\\Users\\#nogamenolife-PC\\.selene\\screenshots\\1658844119312\\1658844119313.png\nPageSource: file://C:\\Users\\#nogamenolife-PC\\.selene\\screenshots\\1658844119312\\1658844119313.html\n\n", "trace": "  File \"D:\\Мои документы\\Desktop\\qa.guru\\qa_guru_python_lesson-9\\test\\test_box.py\", line 50, in test_student_registration_form\n    state.select(option='Haryana')\n  File \"D:\\Мои документы\\Desktop\\qa.guru\\qa_guru_python_lesson-9\\demoqa_tests\\controls\\dropdown.py\", line 11, in select\n    self.element.perform(command.js.scroll_into_view).click()\n  File \"C:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\entity.py\", line 464, in click\n    self.wait.command('click', lambda element: element().click())\n  File \"C:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\wait.py\", line 136, in command\n    self.for_(Command(description, fn))\n  File \"C:\\Users\\#nogamenolife-PC\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selene\\core\\wait.py\", line 125, in for_\n    raise self._hook_failure(failure)\n"}, "start": 1658844129463, "stop": 1658844139170}], "start": 1658844127384, "stop": 1658844139173, "uuid": "d2c9d69d-1073-40ff-af48-cafe48145243", "historyId": "589e4a703b1a1747d3e9d28796b0f7c6", "testCaseId": "78aa62d9cf37d236cafcfe65f7f6e1f9", "fullName": "test.test_box#test_student_registration_form", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_box"}, {"name": "host", "value": "DESKTOP-02UPMIQ"}, {"name": "thread", "value": "4832-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_box"}]}